name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  check_backend:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.18'
      - name: Install dependencies
        run: npm install
      - name: Build common module
        run: npm run build:common
      - name: Run lint
        run: npm run lint
      - name: Run tests
        run: npm run test
  check_frontend:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.18'
      - name: Install dependencies
        run: npm install
      - name: Run lint
        run: npm run lint
  playwright_test:
    runs-on: ubuntu-20.04
    needs: [check_backend, check_frontend]
    defaults:
      run:
        working-directory: tests
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_DB: gq_db_test
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.18'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Build app
        run: npm run build:app
      - name: Run Playwright tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: user
          POSTGRES_DB: gq_db_test
          POSTGRES_PASSWORD: password
          POSTGRES_PORT: 5432
          JWT_SECRET: jwtsecret
        run: npm run test
  deploy_app:
    runs-on: ubuntu-20.04
    needs: [check_backend, check_frontend, playwright_test]
    steps:
      - name: Deploy to render
        if: ${{ github.event_name == 'push' }}
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
